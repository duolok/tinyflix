{
  "/home/studyman/tinyflix/tinyflix-back": {
    "versionSfCore": null,
    "versionFramework": "4.0.38",
    "isWithinCompose": false,
    "composeOrgName": null,
    "servicePath": "/home/studyman/tinyflix/tinyflix-back",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "tinyflix-back",
      "provider": {
        "name": "aws",
        "runtime": "python3.9",
        "region": "us-central-1",
        "environment": {
          "MOVIE_TABLE": "Movies",
          "MOVIE_BUCKET": "movie-bucket"
        }
      },
      "functions": {
        "uploadMovie": {
          "handler": "lambdas/upload_movie.lambda_handler",
          "events": [
            {
              "http": {
                "path": "upload",
                "method": "post"
              }
            }
          ]
        },
        "downloadMovie": {
          "handler": "lambdas/download_movie.lambda_handler",
          "events": [
            {
              "http": {
                "path": "download",
                "method": "get"
              }
            }
          ]
        },
        "deleteMovie": {
          "handler": "lambdas/delete_movie.lambda_handler",
          "events": [
            {
              "http": {
                "path": "delete",
                "method": "delete"
              }
            }
          ]
        }
      },
      "resources": {
        "Resources": {
          "MoviesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Movies",
              "AttributeDefinitions": [
                {
                  "AttributeName": "MovieID",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "MovieID",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "S3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "movie-bucket"
            }
          }
        }
      },
      "plugins": [
        "serverless-python-requirements"
      ]
    },
    "serviceRawFile": "service: tinyflix-back\n\nprovider:\n  name: aws\n  runtime: python3.9\n  region: us-central-1\n  environment:\n    MOVIE_TABLE: Movies\n    MOVIE_BUCKET: movie-bucket\n\nfunctions:\n  uploadMovie:\n    handler: lambdas/upload_movie.lambda_handler\n    events:\n      - http:\n          path: upload\n          method: post\n\n  downloadMovie:\n    handler: lambdas/download_movie.lambda_handler\n    events:\n      - http:\n          path: download\n          method: get\n\n  deleteMovie:\n    handler: lambdas/delete_movie.lambda_handler\n    events:\n      - http:\n          path: delete\n          method: delete\n\nresources:\n  Resources:\n    MoviesTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: Movies\n        AttributeDefinitions:\n          - AttributeName: MovieID\n            AttributeType: S\n        KeySchema:\n          - AttributeName: MovieID\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n\n    S3Bucket:\n      Type: AWS::S3::Bucket\n      Properties:\n        BucketName: movie-bucket\n\nplugins:\n  - serverless-python-requirements\n\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": {
      "message": "Unauthorized",
      "stack": "Error: Unauthorized\n    at getClientDataFromAccessKey (file:///home/studyman/.serverless/releases/4.0.38/package/dist/sf-core.js:177:19645)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async getAuthenticatedData (file:///home/studyman/.serverless/releases/4.0.38/package/dist/sf-core.js:177:6736)\n    at async authenticate2 (file:///home/studyman/.serverless/releases/4.0.38/package/dist/sf-core.js:1065:26469)\n    at async Object.resolveServiceConfig (file:///home/studyman/.serverless/releases/4.0.38/package/dist/sf-core.js:1065:27841)\n    at async file:///home/studyman/.serverless/releases/4.0.38/package/dist/sf-core.js:1068:1209\n    at async route (file:///home/studyman/.serverless/releases/4.0.38/package/dist/sf-core.js:1068:1182)\n    at async Object.run2 [as run] (file:///home/studyman/.serverless/releases/4.0.38/package/dist/sf-core.js:1068:4620)\n    at async Object.handler (file:///home/studyman/.serverless/releases/4.0.38/package/dist/sf-core.js:1068:9307)"
    },
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  }
}